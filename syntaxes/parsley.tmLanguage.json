{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Parsley",
	"patterns": [
		{
			"include": "#constants"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#blocks"
		},
		{
			"include": "#varianttypes"
		},
		{
			"include": "#nonterminals"
		},
		{
			"include": "#variables"
		}
	],
	"repository": {
		"comments": {
			"match": "//.*",
			"name": "comment.line.double-slash"
		},
		"blocks": {
			"patterns": [
				{
					"match": "(type) (.*) = \\{",
					"captures": {
						"1": {
							"name": "keyword.control"
						},
						"2": {
							"name": "entity.name.type"
						}
					}
				},
				{
					"name": "keyword.control",
					"match": "\\bformat\\b"
				},
				{
					"match": "[\\s]+(\\[)(.*)(\\])",
					"captures": {
						"1": {
							"name": "invalid"
						},
						"2": {
							"patterns": [
								{
									"include": "#constants"
								},
								{
									"include": "#variables"
								},
								{
									"include": "#nonterminals"
								}
							]
						},
						"3": {
							"name": "invalid"
						}
					}
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.numeric",
					"match": "\\d"
				},
				{
					"name": "string.quoted.double.parsley",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.parsley",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"nonterminals": {
			"patterns": [
				{
					"name": "support.type",
					"match": "\\b[A-Z]\\w*\\b"
				},
				{
					"name": "support.type",
					"match": "\\b(int|byte|bit|bool|endian)\\b"
				},
				{
					"match": "([A-Za-z_][\\w]*)\\s([A-Za-z_][\\w]*)",
					"captures": {
						"1": {
							"name": "entity.name.tag"
						},
						"2": {
							"name": "variable"
						}
					}
				}
			]
		},
		"operators": {
			"name": "keyword.operator",
			"match": "(-|\\!|~|\\+|/|\\*|<|>|&&|\\|\\||\\|_b|&_b|=|\\:=)"
		},
		"varianttypes": {
			"patterns": [
				{
					"match": "(endian)\\:\\:(Big|Little)\\(\\)",
					"captures": {
						"1": {
							"name": "support.type"
						},
						"2": {
							"name": "support.function"
						}
					}
				},
				{
					"match": "(option)\\:\\:(Some|None)\\(.*\\)",
					"captures": {
						"1": {
							"name": "support.type"
						},
						"2": {
							"name": "support.function"
						}
					}
				},
				{
					"match": "(bool)\\:\\:(True|False)\\(\\)",
					"captures": {
						"1": {
							"name": "support.type"
						},
						"2": {
							"name": "support.function"
						}
					}
				},
				{
					"match": "(bit)\\:\\:(One|Zero)\\(\\)",
					"captures": {
						"1": {
							"name": "support.type"
						},
						"2": {
							"name": "support.function"
						}
					}
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"match": "([A-Za-z_][\\w]*):[\\s]*(\\w*)",
					"captures": {
						"1": {
							"name": "entity.other.attribute-name"
						},
						"2": {
							"name": "entity.name.type"
						}
					}
				},
				{
					"match": "([A-Za-z_][\\w]*)",
					"captures": {
						"1": {
							"name": "variable"
						}
					}
				},
				{
					"match": "(?:[\\.]([A-Za-z_][\\w]*))",
					"captures": {
						"1": {
							"name": "entity.other.attribute-name"
						}
					}
				}
			]
		}
	},
	"scopeName": "source.ply"
}